    # apprunner.yaml - Configuration file for AWS App Runner

    # Specifies the version of the configuration file format.
    version: 1.0

    # Defines the runtime environment for the application.
    # Use the hyphenated format which is commonly supported.
    runtime: python-3.11 # Make sure this matches your desired Python version

    # Defines the build process commands.
    build:
      commands:
        # Commands executed during the build phase.
        build:
          # Upgrade pip to the latest version first to avoid potential issues.
          - python3 -m pip install --upgrade pip
          # Install dependencies listed in requirements.txt using python3 module invocation.
          - python3 -m pip install -r requirements.txt
          # Add any other build steps here if needed (e.g., collect static files)
          # - python3 manage.py collectstatic --noinput

    # Defines the command to start the application.
    run:
      # Use python3 module invocation for gunicorn for robustness.
      # Binds to the port specified by the $PORT environment variable provided by App Runner.
      # Uses 4 worker processes (adjust based on instance size/needs).
      # Assumes your Flask app instance 'app' is in 'app.py'. Adjust 'app:app' if needed.
      command: python3 -m gunicorn --bind :$PORT --workers 4 app:app
      # Optional: Define the network port if needed, though binding to $PORT usually suffices.
      # network:
      #   port: 8080 # Example internal port

    # Optional but recommended: Configure an HTTP health check.
    healthcheck:
      # Path for the health check request (use '/' for the root or a specific endpoint like '/health').
      path: '/'
      # Interval between health checks (seconds).
      interval: 10
      # Timeout for each health check request (seconds).
      timeout: 5
      # Number of consecutive successful checks to be considered healthy.
      healthy_threshold: 1
      # Number of consecutive failed checks to be considered unhealthy.
      unhealthy_threshold: 5
    
